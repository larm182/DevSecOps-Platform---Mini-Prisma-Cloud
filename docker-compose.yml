version: '3.8'

services:
  # Backend FastAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: devsecops-backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
      - ./backend/devsecops.db:/app/devsecops.db
      - /var/run/docker.sock:/var/run/docker.sock  # Para escaneos de Docker
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=sqlite:///./devsecops.db
    networks:
      - devsecops-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React con Nginx
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: devsecops-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - devsecops-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Base de datos PostgreSQL (opcional, para producci√≥n)
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: devsecops-postgres
  #   environment:
  #     POSTGRES_DB: devsecops
  #     POSTGRES_USER: devsecops
  #     POSTGRES_PASSWORD: secure_password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - devsecops-network
  #   restart: unless-stopped

networks:
  devsecops-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local

